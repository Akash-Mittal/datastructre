package com.ds.linear;

import com.ds.linear.Queue.*;

import com.ds.base.Node;
import junit.framework.TestCase;

public class QueueTest extends TestCase {

	public void test_type() throws Exception {
		// TODO auto-generated by JUnit Helper.
		assertNotNull(Queue.class);
	}

	public void test_instantiation() throws Exception {
		// TODO auto-generated by JUnit Helper.
		Queue target = new Queue();
		assertNotNull(target);
	}

	public void test_enQueue_A$Object() throws Exception {
		// TODO auto-generated by JUnit Helper.
		Queue<String> target = new Queue<String>();
		assertEquals(target.first, -1);
		assertEquals(target.last, -1);
		assertNotNull(target.getStart());
		assertNull(target.getStart().getNext());
		
		target.enQueue("ram ram g");
		assertEquals(target.first, 0);
		assertEquals(target.last, 0);
		assertNotNull(target.getStart());
		assertNull(target.getStart().getNext().getNext());
		
		
		target.enQueue("Sita ram");
		assertNotSame(target.getFirst(),target.getLast());
		assertEquals(target.first, 0);
		assertEquals(target.last, 1);

		
//		assertNull(target.getStart().getNext());
		
		
	}

	
	public void testDequeue() throws Exception {
		Queue<String> target = new Queue<String>();
		boolean flag=false;
		try{
		target.dequeue();
		}catch(Exception exception){
			flag=true;
		}
		assertEquals(flag, true);
		target.enQueue("ram ram g");
		String s = target.dequeue();
		assertEquals(s,"ram ram g");
		assertEquals(target.getFirst(), target.getLast());
		target.enQueue("ram ram g");
		target.enQueue("ram ram g2");
		assertNotSame(target.getFirst(), target.getLast());
		assertEquals(target.getFirst(),0);
		assertEquals(target.getLast(),1);
		
	}

}
